-- This file proves that the collection of all sets is a groupoid
module collection where

import proto_univ
import sigma
import pi

eqEquivFst (A B : U) : (t u : equiv A B) ->
     Path U (Path (equiv A B) t u) (Path (A -> B) t.1 u.1)
   = lemSigProp (A -> B) (isEquiv A B) (propIsEquiv A B)

-- groupoidFun (A B : U) (gB:groupoid B) : groupoid (A -> B) =
--   groupoidPi A (\(x : A) -> B) (\(x : A) -> gB)

-- lem5 (A B : U) (gB:groupoid B) (t u:equiv A B) : set (Path (equiv A B) t u)
--  = substInv U set  (Path (equiv A B) t u) (Path (A -> B) t.1 u.1)
--             (eqEquivFst A B t u) (groupoidFun A B gB t.1 u.1)

setPath (A B : U) (sB : set B) : set (Path U A B) =
 substInv U set (Path U A B) (equiv A B) (corrUniv A B) (rem A B sB)
  where
  rem (A B : U) (sB:set B) (t u:equiv A B) : prop (Path (equiv A B) t u)
    = substInv U prop (Path (equiv A B) t u) (Path (A -> B) t.1 u.1)
            (eqEquivFst A B t u) (setFun A B sB t.1 u.1)

-- the collection of all sets is a groupoid
groupoidSET : groupoid SET = \(A B : SET) ->
  let rem : set (Path U A.1 B.1) = setPath A.1 B.1 B.2
      rem1 : Path U (Path SET A B) (Path U A.1 B.1) =
        lemSigProp U set setIsProp A B
  in substInv U set (Path SET A B) (Path U A.1 B.1) rem1 rem

